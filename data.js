data = '[ { "contestId": 1555,  "index": "E",   "name": "Boring Segments", "type": "PROGRAMMING",  "rating": 2100,   "tags": [ "data structures", "sortings", "trees", "two pointers"   ]},{ "contestId": 1555,  "index": "D",   "name": "Say No to Palindromes", "type": "PROGRAMMING",  "rating": 1600,   "tags": [ "brute force", "constructive algorithms", "dp", "strings"   ]},{ "contestId": 1550,  "index": "C",   "name": "Manhattan Subarrays", "type": "PROGRAMMING",  "rating": 1700,   "tags": [ "brute force", "geometry", "greedy", "implementation"   ]},{ "contestId": 1535,  "index": "D",   "name": "Playoff Tournament", "type": "PROGRAMMING",  "rating": 1800,   "tags": [ "data structures", "dfs and similar", "dp", "implementation", "trees"   ]},{ "contestId": 1525,  "index": "E",   "name": "Assimilation IV", "type": "PROGRAMMING",  "rating": 2100,   "tags": [ "combinatorics", "dp", "math", "probabilities", "two pointers"   ]},{ "contestId": 1525,  "index": "D",   "name": "Armchairs", "type": "PROGRAMMING",  "rating": 1800,   "tags": [ "dp", "flows", "graph matchings", "greedy"   ]},{ "contestId": 1525,  "index": "C",   "name": "Robot Collisions", "type": "PROGRAMMING",  "rating": 2000,   "tags": [ "data structures", "greedy", "implementation", "sortings"   ]},{ "contestId": 1519,  "index": "D",   "name": "Maximum Sum of Products", "type": "PROGRAMMING",  "rating": 1600,   "tags": [ "brute force", "dp", "implementation", "math", "two pointers"   ]},{ "contestId": 1511,  "index": "E",   "name": "Colorings and Dominoes", "type": "PROGRAMMING",  "rating": 2100,   "tags": [ "combinatorics", "dp", "greedy", "math"   ]},{ "contestId": 1511,  "index": "D",   "name": "Min Cost String", "type": "PROGRAMMING",  "rating": 1600,   "tags": [ "brute force", "constructive algorithms", "graphs", "greedy", "strings"   ]},{ "contestId": 1510,  "index": "G",   "name": "Guide", "type": "PROGRAMMING",  "rating": 2100,   "tags": []},{ "contestId": 1510,  "index": "D",   "name": "Digits", "type": "PROGRAMMING",  "rating": 2100,   "tags": [ "dp", "math", "number theory"   ]},{ "contestId": 1499,  "index": "D",   "name": "The Number of Pairs", "type": "PROGRAMMING",  "rating": 2100,   "tags": [ "dp", "math", "number theory"   ]},{ "contestId": 1494,  "index": "C",   "name": "1D Sokoban", "type": "PROGRAMMING",  "rating": 1900,   "tags": [ "binary search", "dp", "greedy", "implementation", "two pointers"   ]},{ "contestId": 1487,  "index": "E",   "name": "Cheap Dinner", "type": "PROGRAMMING",  "rating": 2000,   "tags": [ "brute force", "data structures", "graphs", "greedy", "implementation", "sortings", "two pointers"   ]},{ "contestId": 1476,  "index": "D",   "name": "Journey", "type": "PROGRAMMING",  "rating": 1700,   "tags": [ "dfs and similar", "dp", "dsu", "implementation"   ]},{ "contestId": 1476,  "index": "C",   "name": "Longest Simple Cycle", "type": "PROGRAMMING",  "rating": 1600,   "tags": [ "dp", "graphs", "greedy"   ]},{ "contestId": 1473,  "index": "D",   "name": "Program", "type": "PROGRAMMING",  "rating": 1700,   "tags": [ "data structures", "dp", "implementation", "strings"   ]},{ "contestId": 1469,  "index": "D",   "name": "Ceil Divisions", "type": "PROGRAMMING",  "rating": 1700,   "tags": [ "brute force", "constructive algorithms", "math", "number theory"   ]},{ "contestId": 1469,  "index": "C",   "name": "Building a Fence", "type": "PROGRAMMING",  "rating": 1600,   "tags": [ "dp", "greedy", "implementation", "two pointers"   ]},{ "contestId": 1468,  "index": "K",   "name": "The Robot", "type": "PROGRAMMING",  "rating": 1600,   "tags": [ "brute force", "implementation"   ]},{ "contestId": 1468,  "index": "J",   "name": "Road Reform", "type": "PROGRAMMING",  "rating": 1800,   "tags": [ "dsu", "graphs", "greedy"   ]},{ "contestId": 1468,  "index": "F",   "name": "Full Turn", "type": "PROGRAMMING",  "rating": 1700,   "tags": [ "geometry", "hashing", "number theory"   ]},{ "contestId": 1468,  "index": "D",   "name": "Firecrackers", "type": "PROGRAMMING",  "rating": 1700,   "tags": [ "binary search", "sortings"   ]},{ "contestId": 1463,  "index": "D",   "name": "Pairs", "type": "PROGRAMMING",  "rating": 1900,   "tags": [ "binary search", "constructive algorithms", "greedy", "two pointers"   ]},{ "contestId": 1463,  "index": "C",   "name": "Busy Robot", "type": "PROGRAMMING",  "rating": 1800,   "tags": [ "implementation"   ]},{ "contestId": 1455,  "index": "D",   "name": "Sequence and Swaps", "type": "PROGRAMMING",  "rating": 1600,   "tags": [ "dp", "greedy", "sortings"   ]},{ "contestId": 1452,  "index": "D",   "name": "Radio Towers", "type": "PROGRAMMING",  "rating": 1600,   "tags": [ "combinatorics", "dp", "math"   ]},{ "contestId": 1437,  "index": "D",   "name": "Minimal Height Tree", "type": "PROGRAMMING",  "rating": 1600,   "tags": [ "graphs", "greedy", "shortest paths", "trees"   ]},{ "contestId": 1437,  "index": "C",   "name": "Chef Monocarp", "type": "PROGRAMMING",  "rating": 1800,   "tags": [ "dp", "flows", "graph matchings", "greedy", "math", "sortings"   ]},{ "contestId": 1431,  "index": "G",   "name": "Number Deletion Game", "type": "PROGRAMMING",  "rating": 2100,   "tags": [ "*special", "dp", "games", "greedy"   ]},{ "contestId": 1431,  "index": "F",   "name": "Neural Network Problem", "type": "PROGRAMMING",  "rating": 2100,   "tags": [ "*special", "binary search", "greedy"   ]},{ "contestId": 1431,  "index": "E",   "name": "Chess Match", "type": "PROGRAMMING",  "rating": 2000,   "tags": [ "*special"   ]},{ "contestId": 1431,  "index": "C",   "name": "Black Friday", "type": "PROGRAMMING",  "rating": 1600,   "tags": [ "*special", "implementation"   ]},{ "contestId": 1430,  "index": "E",   "name": "String Reversal", "type": "PROGRAMMING",  "rating": 1900,   "tags": [ "data structures", "greedy", "strings"   ]},{ "contestId": 1430,  "index": "D",   "name": "String Deletion", "type": "PROGRAMMING",  "rating": 1700,   "tags": [ "binary search", "data structures", "greedy", "two pointers"   ]},{ "contestId": 1418,  "index": "D",   "name": "Trash Problem", "type": "PROGRAMMING",  "rating": 2100,   "tags": [ "data structures", "implementation"   ]},{ "contestId": 1400,  "index": "D",   "name": "Zigzags", "type": "PROGRAMMING",  "rating": 1900,   "tags": [ "brute force", "combinatorics", "data structures", "math", "two pointers"   ]},{ "contestId": 1400,  "index": "B",   "name": "RPG Protagonist", "type": "PROGRAMMING",  "rating": 1700,   "tags": [ "brute force", "greedy", "math"   ]},{ "contestId": 1398,  "index": "D",   "name": "Colored Rectangles", "type": "PROGRAMMING",  "rating": 1800,   "tags": [ "dp", "greedy", "sortings"   ]},{ "contestId": 1398,  "index": "C",   "name": "Good Subarrays", "type": "PROGRAMMING",  "rating": 1600,   "tags": [ "data structures", "dp", "math"   ]},{ "contestId": 1389,  "index": "D",   "name": "Segment Intersections", "type": "PROGRAMMING",  "rating": 2100,   "tags": [ "brute force", "greedy", "implementation", "math"   ]},{ "contestId": 1389,  "index": "B",   "name": "Array Walk", "type": "PROGRAMMING",  "rating": 1600,   "tags": [ "brute force", "dp", "greedy"   ]},{ "contestId": 1380,  "index": "D",   "name": "Berserk And Fireball", "type": "PROGRAMMING",  "rating": 2000,   "tags": [ "constructive algorithms", "greedy", "implementation", "math", "two pointers"   ]},{ "contestId": 1373,  "index": "D",   "name": "Maximum Sum on Even Positions", "type": "PROGRAMMING",  "rating": 1600,   "tags": [ "divide and conquer", "dp", "greedy", "implementation"   ]},{ "contestId": 1366,  "index": "E",   "name": "Two Arrays", "type": "PROGRAMMING",  "rating": 2100,   "tags": [ "binary search", "brute force", "combinatorics", "constructive algorithms", "dp", "two pointers"   ]},{ "contestId": 1366,  "index": "D",   "name": "Two Divisors", "type": "PROGRAMMING",  "rating": 2000,   "tags": [ "constructive algorithms", "math", "number theory"   ]},{ "contestId": 1359,  "index": "E",   "name": "Modular Stability", "type": "PROGRAMMING",  "rating": 2000,   "tags": [ "combinatorics", "math", "number theory"   ]},{ "contestId": 1359,  "index": "D",   "name": "Yet Another Yet Another Task", "type": "PROGRAMMING",  "rating": 2000,   "tags": [ "data structures", "dp", "implementation", "two pointers"   ]},{ "contestId": 1359,  "index": "C",   "name": "Mixing Water", "type": "PROGRAMMING",  "rating": 1700,   "tags": [ "binary search", "math"   ]},{ "contestId": 1354,  "index": "E",   "name": "Graph Coloring", "type": "PROGRAMMING",  "rating": 2100,   "tags": [ "dfs and similar", "dp", "graphs"   ]},{ "contestId": 1354,  "index": "D",   "name": "Multiset", "type": "PROGRAMMING",  "rating": 1900,   "tags": [ "binary search", "data structures"   ]},{ "contestId": 1354,  "index": "C2",   "name": "Not So Simple Polygon Embedding", "type": "PROGRAMMING",  "rating": 2000,   "tags": [ "binary search", "brute force", "geometry", "math"   ]},{ "contestId": 1342,  "index": "D",   "name": "Multiple Testcases", "type": "PROGRAMMING",  "rating": 1900,   "tags": [ "binary search", "constructive algorithms", "data structures", "greedy", "sortings", "two pointers"   ]},{ "contestId": 1342,  "index": "C",   "name": "Yet Another Counting Problem", "type": "PROGRAMMING",  "rating": 1600,   "tags": [ "math", "number theory"   ]},{ "contestId": 1334,  "index": "D",   "name": "Minimum Euler Cycle", "type": "PROGRAMMING",  "rating": 1800,   "tags": [ "constructive algorithms", "graphs", "greedy", "implementation"   ]},{ "contestId": 1334,  "index": "C",   "name": "Circle of Monsters", "type": "PROGRAMMING",  "rating": 1600,   "tags": [ "brute force", "constructive algorithms", "greedy", "math"   ]},{ "contestId": 1327,  "index": "E",   "name": "Count The Blocks", "type": "PROGRAMMING",  "rating": 1800,   "tags": [ "combinatorics", "dp", "math"   ]},{ "contestId": 1327,  "index": "C",   "name": "Game with Chips", "type": "PROGRAMMING",  "rating": 1600,   "tags": [ "constructive algorithms", "implementation"   ]},{ "contestId": 1312,  "index": "E",   "name": "Array Shrinking", "type": "PROGRAMMING",  "rating": 2100,   "tags": [ "dp", "greedy"   ]},{ "contestId": 1312,  "index": "D",   "name": "Count the Arrays", "type": "PROGRAMMING",  "rating": 1700,   "tags": [ "combinatorics", "math"   ]},{ "contestId": 1303,  "index": "D",   "name": "Fill The Bag", "type": "PROGRAMMING",  "rating": 1900,   "tags": [ "bitmasks", "greedy"   ]},{ "contestId": 1303,  "index": "C",   "name": "Perfect Keyboard", "type": "PROGRAMMING",  "rating": 1600,   "tags": [ "dfs and similar", "greedy", "implementation"   ]},{ "contestId": 1295,  "index": "D",   "name": "Same GCDs", "type": "PROGRAMMING",  "rating": 1800,   "tags": [ "math", "number theory"   ]},{ "contestId": 1295,  "index": "C",   "name": "Obtain The String", "type": "PROGRAMMING",  "rating": 1600,   "tags": [ "dp", "greedy", "strings"   ]},{ "contestId": 1295,  "index": "B",   "name": "Infinite Prefixes", "type": "PROGRAMMING",  "rating": 1700,   "tags": [ "math", "strings"   ]},{ "contestId": 1288,  "index": "E",   "name": "Messenger Simulator", "type": "PROGRAMMING",  "rating": 2000,   "tags": [ "data structures"   ]},{ "contestId": 1288,  "index": "D",   "name": "Minimax Problem", "type": "PROGRAMMING",  "rating": 2000,   "tags": [ "binary search", "bitmasks", "dp"   ]},{ "contestId": 1288,  "index": "C",   "name": "Two Arrays", "type": "PROGRAMMING",  "rating": 1600,   "tags": [ "combinatorics", "dp"   ]},{ "contestId": 1279,  "index": "D",   "name": "Santa's Bot", "type": "PROGRAMMING",  "rating": 1700,   "tags": [ "combinatorics", "math", "probabilities"   ]},{ "contestId": 1278,  "index": "D",   "name": "Segment Tree", "type": "PROGRAMMING",  "rating": 2100,   "tags": [ "data structures", "dsu", "graphs", "trees"   ]},{ "contestId": 1278,  "index": "C",   "name": "Berry Jam", "type": "PROGRAMMING",  "rating": 1700,   "tags": [ "data structures", "dp", "greedy", "implementation"   ]},{ "contestId": 1267,  "index": "L",   "name": "Lexicography", "type": "PROGRAMMING",  "rating": 1800,   "tags": [ "constructive algorithms", "strings"   ]},{ "contestId": 1267,  "index": "K",   "name": "Key Storage", "type": "PROGRAMMING",  "rating": 2100,   "tags": [ "combinatorics", "math"   ]},{ "contestId": 1267,  "index": "J",   "name": "Just Arrange the Icons", "type": "PROGRAMMING",  "rating": 1800,   "tags": [ "greedy", "implementation", "math"   ]},{ "contestId": 1267,  "index": "E",   "name": "Elections", "type": "PROGRAMMING",  "rating": 1700,   "tags": [ "greedy"   ]},{ "contestId": 1260,  "index": "D",   "name": "A Game with Traps", "type": "PROGRAMMING",  "rating": 1900,   "tags": [ "binary search", "dp", "greedy", "sortings"   ]},{ "contestId": 1260,  "index": "C",   "name": "Infinite Fence", "type": "PROGRAMMING",  "rating": 1700,   "tags": [ "greedy", "math", "number theory"   ]},{ "contestId": 1257,  "index": "E",   "name": "The Contest", "type": "PROGRAMMING",  "rating": 2000,   "tags": [ "data structures", "dp", "greedy"   ]},{ "contestId": 1257,  "index": "D",   "name": "Yet Another Monster Killing Problem", "type": "PROGRAMMING",  "rating": 1700,   "tags": [ "binary search", "data structures", "dp", "greedy", "sortings", "two pointers"   ]},{ "contestId": 1252,  "index": "K",   "name": "Addition Robot", "type": "PROGRAMMING",  "rating": 2100,   "tags": [ "data structures", "math", "matrices"   ]},{ "contestId": 1252,  "index": "H",   "name": "Twin Buildings", "type": "PROGRAMMING",  "rating": 1800,   "tags": [ "greedy", "implementation"   ]},{ "contestId": 1252,  "index": "G",   "name": "Performance Review", "type": "PROGRAMMING",  "rating": 2100,   "tags": [ "data structures"   ]},{ "contestId": 1252,  "index": "C",   "name": "Even Path", "type": "PROGRAMMING",  "rating": 1600,   "tags": [ "data structures", "implementation"   ]},{ "contestId": 1251,  "index": "D",   "name": "Salary Changing", "type": "PROGRAMMING",  "rating": 1900,   "tags": [ "binary search", "greedy", "sortings"   ]},{ "contestId": 1251,  "index": "C",   "name": "Minimize The Integer", "type": "PROGRAMMING",  "rating": 1600,   "tags": [ "greedy", "two pointers"   ]},{ "contestId": 1250,  "index": "N",   "name": "Wires", "type": "PROGRAMMING",  "rating": 2000,   "tags": [ "dfs and similar", "graphs", "greedy"   ]},{ "contestId": 1250,  "index": "J",   "name": "The Parade", "type": "PROGRAMMING",  "rating": 1800,   "tags": [ "binary search", "greedy"   ]},{ "contestId": 1250,  "index": "C",   "name": "Trip to Saint Petersburg", "type": "PROGRAMMING",  "rating": 2100,   "tags": [ "data structures"   ]},{ "contestId": 1250,  "index": "B",   "name": "The Feast and the Bus", "type": "PROGRAMMING",  "rating": 1800,   "tags": [ "brute force", "constructive algorithms", "greedy", "math"   ]},{ "contestId": 1238,  "index": "D",   "name": "AB-string", "type": "PROGRAMMING",  "rating": 1900,   "tags": [ "binary search", "combinatorics", "dp", "strings"   ]},{ "contestId": 1238,  "index": "C",   "name": "Standard Free2play", "type": "PROGRAMMING",  "rating": 1600,   "tags": [ "dp", "greedy", "math"   ]},{ "contestId": 1221,  "index": "D",   "name": "Make The Fence Great Again", "type": "PROGRAMMING",  "rating": 1800,   "tags": [ "dp"   ]},{ "contestId": 1217,  "index": "D",   "name": "Coloring Edges", "type": "PROGRAMMING",  "rating": 2100,   "tags": [ "constructive algorithms", "dfs and similar", "graphs"   ]},{ "contestId": 1217,  "index": "C",   "name": "The Number Of Good Substrings", "type": "PROGRAMMING",  "rating": 1700,   "tags": [ "binary search", "bitmasks", "brute force"   ]},{ "contestId": 1217,  "index": "B",   "name": "Zmei Gorynich", "type": "PROGRAMMING",  "rating": 1600,   "tags": [ "greedy", "math"   ]},{ "contestId": 1207,  "index": "F",   "name": "Remainder Problem", "type": "PROGRAMMING",  "rating": 2100,   "tags": [ "brute force", "data structures", "implementation"   ]},{ "contestId": 1207,  "index": "E",   "name": "XOR Guessing", "type": "PROGRAMMING",  "rating": 1900,   "tags": [ "bitmasks", "interactive", "math"   ]},{ "contestId": 1207,  "index": "D",   "name": "Number Of Permutations", "type": "PROGRAMMING",  "rating": 1800,   "tags": [ "combinatorics"   ]},{ "contestId": 1202,  "index": "D",   "name": "Print a 1337-string...", "type": "PROGRAMMING",  "rating": 1900,   "tags": [ "combinatorics", "constructive algorithms", "math", "strings"   ]},{ "contestId": 1202,  "index": "C",   "name": "You Are Given a WASD-string...", "type": "PROGRAMMING",  "rating": 2100,   "tags": [ "brute force", "data structures", "dp", "greedy", "implementation", "math", "strings"   ]},{ "contestId": 1202,  "index": "B",   "name": "You Are Given a Decimal String...", "type": "PROGRAMMING",  "rating": 1700,   "tags": [ "brute force", "dp", "shortest paths"   ]},{ "contestId": 1197,  "index": "D",   "name": "Yet Another Subarray Problem", "type": "PROGRAMMING",  "rating": 1900,   "tags": [ "dp", "greedy", "math"   ]},{ "contestId": 1194,  "index": "D",   "name": "1-2-K Game", "type": "PROGRAMMING",  "rating": 1700,   "tags": [ "games", "math"   ]},{ "contestId": 1187,  "index": "E",   "name": "Tree Painting", "type": "PROGRAMMING",  "rating": 2100,   "tags": [ "dfs and similar", "dp", "trees"   ]},{ "contestId": 1187,  "index": "C",   "name": "Vasya And Array", "type": "PROGRAMMING",  "rating": 1800,   "tags": [ "constructive algorithms", "greedy", "implementation"   ]},{ "contestId": 1175,  "index": "D",   "name": "Array Splitting", "type": "PROGRAMMING",  "rating": 1900,   "tags": [ "greedy", "sortings"   ]},{ "contestId": 1175,  "index": "C",   "name": "Electrification", "type": "PROGRAMMING",  "rating": 1600,   "tags": [ "binary search", "brute force", "greedy"   ]},{ "contestId": 1175,  "index": "B",   "name": "Catch Overflow!", "type": "PROGRAMMING",  "rating": 1600,   "tags": [ "data structures", "expression parsing", "implementation"   ]},{ "contestId": 1167,  "index": "E",   "name": "Range Deleting", "type": "PROGRAMMING",  "rating": 2100,   "tags": [ "binary search", "combinatorics", "data structures", "two pointers"   ]},{ "contestId": 1156,  "index": "C",   "name": "Match Points", "type": "PROGRAMMING",  "rating": 2000,   "tags": [ "binary search", "greedy", "sortings", "ternary search", "two pointers"   ]},{ "contestId": 1156,  "index": "B",   "name": "Ugly Pairs", "type": "PROGRAMMING",  "rating": 1800,   "tags": [ "dfs and similar", "greedy", "implementation", "sortings", "strings"   ]},{ "contestId": 1155,  "index": "D",   "name": "Beautiful Array", "type": "PROGRAMMING",  "rating": 1900,   "tags": [ "brute force", "data structures", "divide and conquer", "dp", "greedy"   ]},{ "contestId": 1140,  "index": "C",   "name": "Playlist", "type": "PROGRAMMING",  "rating": 1600,   "tags": [ "brute force", "data structures", "sortings"   ]},{ "contestId": 1132,  "index": "F",   "name": "Clear the String", "type": "PROGRAMMING",  "rating": 2000,   "tags": [ "dp"   ]},{ "contestId": 1132,  "index": "C",   "name": "Painting the Fence", "type": "PROGRAMMING",  "rating": 1700,   "tags": [ "brute force"   ]},{ "contestId": 1117,  "index": "D",   "name": "Magic Gems", "type": "PROGRAMMING",  "rating": 2100,   "tags": [ "dp", "math", "matrices"   ]},{ "contestId": 1117,  "index": "C",   "name": "Magic Ship", "type": "PROGRAMMING",  "rating": 1900,   "tags": [ "binary search"   ]},{ "contestId": 1107,  "index": "D",   "name": "Compression", "type": "PROGRAMMING",  "rating": 1800,   "tags": [ "dp", "implementation", "math", "number theory"   ]},{ "contestId": 1101,  "index": "D",   "name": "GCD Counting", "type": "PROGRAMMING",  "rating": 2000,   "tags": [ "data structures", "dfs and similar", "dp", "number theory", "trees"   ]},{ "contestId": 1096,  "index": "D",   "name": "Easy Problem", "type": "PROGRAMMING",  "rating": 1800,   "tags": [ "dp"   ]},{ "contestId": 1096,  "index": "C",   "name": "Polygon for the Angle", "type": "PROGRAMMING",  "rating": 1600,   "tags": [ "brute force", "geometry"   ]},{ "contestId": 1093,  "index": "D",   "name": "Beautiful Graph", "type": "PROGRAMMING",  "rating": 1700,   "tags": [ "dfs and similar", "graphs"   ]},{ "contestId": 1090,  "index": "L",   "name": "Berland University", "type": "PROGRAMMING",  "rating": 2000,   "tags": [ "greedy", "math"   ]},{ "contestId": 1090,  "index": "K",   "name": "Right Expansion Of The Mind", "type": "PROGRAMMING",  "rating": 2000,   "tags": [ "math"   ]},{ "contestId": 1090,  "index": "I",   "name": "Minimal Product", "type": "PROGRAMMING",  "rating": 2000,   "tags": []},{ "contestId": 1090,  "index": "D",   "name": "Similar Arrays", "type": "PROGRAMMING",  "rating": 1800,   "tags": [ "constructive algorithms"   ]},{ "contestId": 1090,  "index": "B",   "name": "LaTeX Expert", "type": "PROGRAMMING",  "rating": 1900,   "tags": []},{ "contestId": 1089,  "index": "F",   "name": "Fractions", "type": "PROGRAMMING",  "rating": 1900,   "tags": [ "math"   ]},{ "contestId": 1089,  "index": "E",   "name": "Easy Chess", "type": "PROGRAMMING",  "rating": 1700,   "tags": [ "constructive algorithms"   ]},{ "contestId": 1082,  "index": "E",   "name": "Increasing Frequency", "type": "PROGRAMMING",  "rating": 2000,   "tags": [ "binary search", "dp", "greedy"   ]},{ "contestId": 1082,  "index": "D",   "name": "Maximum Diameter Graph", "type": "PROGRAMMING",  "rating": 1800,   "tags": [ "constructive algorithms", "graphs", "implementation"   ]},{ "contestId": 1082,  "index": "C",   "name": "Multi-Subject Competition", "type": "PROGRAMMING",  "rating": 1600,   "tags": [ "greedy", "sortings"   ]},{ "contestId": 1082,  "index": "B",   "name": "Vova and Trophies", "type": "PROGRAMMING",  "rating": 1600,   "tags": [ "greedy"   ]},{ "contestId": 1076,  "index": "E",   "name": "Vasya and a Tree", "type": "PROGRAMMING",  "rating": 1900,   "tags": [ "data structures", "trees"   ]},{ "contestId": 1076,  "index": "D",   "name": "Edge Deletion", "type": "PROGRAMMING",  "rating": 1800,   "tags": [ "graphs", "greedy", "shortest paths"   ]},{ "contestId": 1073,  "index": "D",   "name": "Berland Fair", "type": "PROGRAMMING",  "rating": 1700,   "tags": [ "binary search", "brute force", "data structures", "greedy"   ]},{ "contestId": 1073,  "index": "C",   "name": "Vasya and Robot", "type": "PROGRAMMING",  "rating": 1800,   "tags": [ "binary search", "two pointers"   ]},{ "contestId": 1070,  "index": "E",   "name": "Getting Deals Done", "type": "PROGRAMMING",  "rating": 2100,   "tags": [ "binary search", "data structures"   ]},{ "contestId": 1070,  "index": "C",   "name": "Cloud Computing", "type": "PROGRAMMING",  "rating": 2000,   "tags": [ "data structures", "greedy"   ]},{ "contestId": 1065,  "index": "C",   "name": "Make It Equal", "type": "PROGRAMMING",  "rating": 1600,   "tags": [ "greedy"   ]},{ "contestId": 1051,  "index": "D",   "name": "Bicolorings", "type": "PROGRAMMING",  "rating": 1700,   "tags": [ "bitmasks", "dp"   ]},{ "contestId": 1036,  "index": "D",   "name": "Vasya and Arrays", "type": "PROGRAMMING",  "rating": 1600,   "tags": [ "greedy", "two pointers"   ]},{ "contestId": 1036,  "index": "C",   "name": "Classy Numbers", "type": "PROGRAMMING",  "rating": 1900,   "tags": [ "combinatorics", "dp"   ]},{ "contestId": 1036,  "index": "B",   "name": "Diagonal Walking v.2", "type": "PROGRAMMING",  "rating": 1600,   "tags": [ "math"   ]},{ "contestId": 1027,  "index": "E",   "name": "Inverse Coloring", "type": "PROGRAMMING",  "rating": 2100,   "tags": [ "combinatorics", "dp", "math"   ]},{ "contestId": 1027,  "index": "D",   "name": "Mouse Hunt", "type": "PROGRAMMING",  "rating": 1700,   "tags": [ "dfs and similar", "graphs"   ]},{ "contestId": 1027,  "index": "C",   "name": "Minimum Value Rectangle", "type": "PROGRAMMING",  "rating": 1600,   "tags": [ "greedy"   ]},{ "contestId": 1016,  "index": "D",   "name": "Vasya And The Matrix", "type": "PROGRAMMING",  "rating": 1800,   "tags": [ "constructive algorithms", "flows", "math"   ]},{ "contestId": 1016,  "index": "C",   "name": "Vasya And The Mushrooms", "type": "PROGRAMMING",  "rating": 1800,   "tags": [ "dp", "implementation"   ]},{ "contestId": 1009,  "index": "E",   "name": "Intercity Travelling", "type": "PROGRAMMING",  "rating": 2000,   "tags": [ "combinatorics", "math", "probabilities"   ]},{ "contestId": 1009,  "index": "D",   "name": "Relatively Prime Graph", "type": "PROGRAMMING",  "rating": 1700,   "tags": [ "brute force", "constructive algorithms", "graphs", "greedy", "math"   ]},{ "contestId": 1009,  "index": "C",   "name": "Annoying Present", "type": "PROGRAMMING",  "rating": 1700,   "tags": [ "greedy", "math"   ]},{ "contestId": 1000,  "index": "E",   "name": "We Need More Bosses", "type": "PROGRAMMING",  "rating": 2100,   "tags": [ "dfs and similar", "graphs", "trees"   ]},{ "contestId": 1000,  "index": "D",   "name": "Yet Another Problem On a Subsequence", "type": "PROGRAMMING",  "rating": 1900,   "tags": [ "combinatorics", "dp"   ]},{ "contestId": 1000,  "index": "C",   "name": "Covered Points Count", "type": "PROGRAMMING",  "rating": 1700,   "tags": [ "data structures", "implementation", "sortings"   ]},{ "contestId": 990,  "index": "E",   "name": "Post Lamps", "type": "PROGRAMMING",  "rating": 2100,   "tags": [ "brute force", "greedy"   ]},{ "contestId": 990,  "index": "D",   "name": "Graph And Its Complement", "type": "PROGRAMMING",  "rating": 1700,   "tags": [ "constructive algorithms", "graphs", "implementation"   ]},{ "contestId": 985,  "index": "E",   "name": "Pencils and Boxes", "type": "PROGRAMMING",  "rating": 2100,   "tags": [ "binary search", "data structures", "dp", "greedy", "two pointers"   ]},{ "contestId": 985,  "index": "D",   "name": "Sand Fortress", "type": "PROGRAMMING",  "rating": 2100,   "tags": [ "binary search", "constructive algorithms", "math"   ]},{ "contestId": 976,  "index": "E",   "name": "Well played!", "type": "PROGRAMMING",  "rating": 2100,   "tags": [ "greedy", "sortings"   ]},{ "contestId": 962,  "index": "D",   "name": "Merge Equals", "type": "PROGRAMMING",  "rating": 1600,   "tags": [ "data structures", "implementation"   ]},{ "contestId": 961,  "index": "E",   "name": "Tufurama", "type": "PROGRAMMING",  "rating": 1900,   "tags": [ "data structures"   ]},{ "contestId": 961,  "index": "D",   "name": "Pair Of Lines", "type": "PROGRAMMING",  "rating": 2000,   "tags": [ "geometry"   ]},{ "contestId": 954,  "index": "G",   "name": "Castle Defense", "type": "PROGRAMMING",  "rating": 2000,   "tags": [ "binary search", "data structures", "greedy", "two pointers"   ]},{ "contestId": 954,  "index": "F",   "name": "Runner's Problem", "type": "PROGRAMMING",  "rating": 2100,   "tags": [ "dp", "matrices", "sortings"   ]},{ "contestId": 954,  "index": "E",   "name": "Water Taps", "type": "PROGRAMMING",  "rating": 2000,   "tags": [ "binary search", "greedy", "sortings"   ]},{ "contestId": 954,  "index": "D",   "name": "Fight Against Traffic", "type": "PROGRAMMING",  "rating": 1600,   "tags": [ "dfs and similar", "graphs", "shortest paths"   ]},{ "contestId": 954,  "index": "C",   "name": "Matrix Walk", "type": "PROGRAMMING",  "rating": 1700,   "tags": [ "implementation"   ]},{ "contestId": 946,  "index": "D",   "name": "Timetable", "type": "PROGRAMMING",  "rating": 1800,   "tags": [ "dp"   ]},{ "contestId": 938,  "index": "D",   "name": "Buy a Ticket", "type": "PROGRAMMING",  "rating": 2000,   "tags": [ "data structures", "graphs", "shortest paths"   ]},{ "contestId": 938,  "index": "C",   "name": "Constructing Tests", "type": "PROGRAMMING",  "rating": 1700,   "tags": [ "binary search", "brute force", "constructive algorithms"   ]},{ "contestId": 920,  "index": "F",   "name": "SUM and REPLACE", "type": "PROGRAMMING",  "rating": 2000,   "tags": [ "brute force", "data structures", "dsu", "number theory"   ]},{ "contestId": 920,  "index": "E",   "name": "Connected Components?", "type": "PROGRAMMING",  "rating": 2100,   "tags": [ "data structures", "dfs and similar", "dsu", "graphs"   ]},{ "contestId": 915,  "index": "C",   "name": "Permute Digits", "type": "PROGRAMMING",  "rating": 1700,   "tags": [ "dp", "greedy"   ]},{ "contestId": 911,  "index": "E",   "name": "Stack Sorting", "type": "PROGRAMMING",  "rating": 2000,   "tags": [ "constructive algorithms", "data structures", "greedy", "implementation"   ]},{ "contestId": 911,  "index": "D",   "name": "Inversion Counting", "type": "PROGRAMMING",  "rating": 1800,   "tags": [ "brute force", "math"   ]},{ "contestId": 893,  "index": "E",   "name": "Counting Arrays", "type": "PROGRAMMING",  "rating": 2000,   "tags": [ "combinatorics", "dp", "math", "number theory"   ]},{ "contestId": 893,  "index": "D",   "name": "Credit Card", "type": "PROGRAMMING",  "rating": 1900,   "tags": [ "data structures", "dp", "greedy", "implementation"   ]},{ "contestId": 888,  "index": "E",   "name": "Maximum Subsequence", "type": "PROGRAMMING",  "rating": 1800,   "tags": [ "bitmasks", "divide and conquer", "meet-in-the-middle"   ]},{ "contestId": 888,  "index": "D",   "name": "Almost Identity Permutations", "type": "PROGRAMMING",  "rating": 1600,   "tags": [ "combinatorics", "dp", "math"   ]},{ "contestId": 883,  "index": "K",   "name": "Road Widening", "type": "PROGRAMMING",  "rating": 1800,   "tags": [ "constructive algorithms", "greedy", "implementation"   ]},{ "contestId": 883,  "index": "I",   "name": "Photo Processing", "type": "PROGRAMMING",  "rating": 1900,   "tags": [ "binary search", "dp"   ]},{ "contestId": 883,  "index": "H",   "name": "Palindromic Cut", "type": "PROGRAMMING",  "rating": 1800,   "tags": [ "brute force", "implementation", "strings"   ]},{ "contestId": 883,  "index": "G",   "name": "Orientation of Edges", "type": "PROGRAMMING",  "rating": 1900,   "tags": [ "dfs and similar", "graphs"   ]},{ "contestId": 873,  "index": "D",   "name": "Merge Sort", "type": "PROGRAMMING",  "rating": 1800,   "tags": [ "constructive algorithms", "divide and conquer"   ]},{ "contestId": 873,  "index": "C",   "name": "Strange Game On Matrix", "type": "PROGRAMMING",  "rating": 1600,   "tags": [ "greedy", "two pointers"   ]},{ "contestId": 863,  "index": "E",   "name": "Turn Off The TV", "type": "PROGRAMMING",  "rating": 2000,   "tags": [ "data structures", "sortings"   ]},{ "contestId": 863,  "index": "D",   "name": "Yet Another Array Queries Problem", "type": "PROGRAMMING",  "rating": 1800,   "tags": [ "data structures", "implementation"   ]},{ "contestId": 863,  "index": "C",   "name": "1-2-3", "type": "PROGRAMMING",  "rating": 1800,   "tags": [ "graphs", "implementation"   ]},{ "contestId": 847,  "index": "K",   "name": "Travel Cards", "type": "PROGRAMMING",  "rating": 1800,   "tags": [ "greedy", "implementation", "sortings"   ]},{ "contestId": 847,  "index": "I",   "name": "Noise Level", "type": "PROGRAMMING",  "rating": 1900,   "tags": [ "dfs and similar", "implementation", "math"   ]},{ "contestId": 847,  "index": "H",   "name": "Load Testing", "type": "PROGRAMMING",  "rating": 1600,   "tags": [ "greedy"   ]},{ "contestId": 847,  "index": "F",   "name": "Berland Elections", "type": "PROGRAMMING",  "rating": 2100,   "tags": [ "greedy", "sortings"   ]},{ "contestId": 847,  "index": "E",   "name": "Packmen", "type": "PROGRAMMING",  "rating": 1800,   "tags": [ "binary search", "dp"   ]},{ "contestId": 847,  "index": "C",   "name": "Sum of Nestings", "type": "PROGRAMMING",  "rating": 1800,   "tags": [ "constructive algorithms"   ]},{ "contestId": 847,  "index": "B",   "name": "Preparing for Merge Sort", "type": "PROGRAMMING",  "rating": 1600,   "tags": [ "binary search", "data structures"   ]},{ "contestId": 846,  "index": "F",   "name": "Random Query", "type": "PROGRAMMING",  "rating": 1800,   "tags": [ "data structures", "math", "probabilities", "two pointers"   ]},{ "contestId": 846,  "index": "D",   "name": "Monitor", "type": "PROGRAMMING",  "rating": 1900,   "tags": [ "binary search", "data structures"   ]},{ "contestId": 846,  "index": "C",   "name": "Four Segments", "type": "PROGRAMMING",  "rating": 1800,   "tags": [ "brute force", "data structures", "dp"   ]},{ "contestId": 846,  "index": "B",   "name": "Math Show", "type": "PROGRAMMING",  "rating": 1800,   "tags": [ "brute force", "greedy"   ]},{ "contestId": 845,  "index": "D",   "name": "Driving Test", "type": "PROGRAMMING",  "rating": 1800,   "tags": [ "data structures", "dp", "greedy"   ]},{ "contestId": 845,  "index": "B",   "name": "Luba And The Ticket", "type": "PROGRAMMING",  "rating": 1600,   "tags": [ "brute force", "greedy", "implementation"   ]},{ "contestId": 838,  "index": "B",   "name": "Diverging Directions", "type": "PROGRAMMING",  "rating": 2100,   "tags": [ "data structures", "dfs and similar", "trees"   ]},{ "contestId": 837,  "index": "E",   "name": "Vasya's Function", "type": "PROGRAMMING",  "rating": 2100,   "tags": [ "binary search", "implementation", "math"   ]},{ "contestId": 837,  "index": "D",   "name": "Round Subset", "type": "PROGRAMMING",  "rating": 2100,   "tags": [ "dp", "math"   ]},{ "contestId": 837,  "index": "B",   "name": "Flag of Berland", "type": "PROGRAMMING",  "rating": 1600,   "tags": [ "brute force", "implementation"   ]},{ "contestId": 825,  "index": "C",   "name": "Multi-judge Solving", "type": "PROGRAMMING",  "rating": 1600,   "tags": [ "greedy", "implementation"   ]},{ "contestId": 825,  "index": "B",   "name": "Five-In-a-Row", "type": "PROGRAMMING",  "rating": 1600,   "tags": [ "brute force", "implementation"   ]},{ "contestId": 818,  "index": "F",   "name": "Level Generation", "type": "PROGRAMMING",  "rating": 2100,   "tags": [ "binary search", "math", "ternary search"   ]},{ "contestId": 818,  "index": "E",   "name": "Card Game Again", "type": "PROGRAMMING",  "rating": 1900,   "tags": [ "binary search", "data structures", "number theory", "two pointers"   ]},{ "contestId": 818,  "index": "D",   "name": "Multicolored Cars", "type": "PROGRAMMING",  "rating": 1700,   "tags": [ "data structures", "implementation"   ]},{ "contestId": 818,  "index": "C",   "name": "Sofa Thief", "type": "PROGRAMMING",  "rating": 2000,   "tags": [ "brute force", "implementation"   ]},{ "contestId": 818,  "index": "B",   "name": "Permutation Game", "type": "PROGRAMMING",  "rating": 1600,   "tags": [ "implementation"   ]},{ "contestId": 817,  "index": "E",   "name": "Choosing The Commander", "type": "PROGRAMMING",  "rating": 2000,   "tags": [ "bitmasks", "data structures", "trees"   ]},{ "contestId": 817,  "index": "D",   "name": "Imbalanced Array", "type": "PROGRAMMING",  "rating": 1900,   "tags": [ "data structures", "divide and conquer", "dsu", "sortings"   ]},{ "contestId": 817,  "index": "C",   "name": "Really Big Numbers", "type": "PROGRAMMING",  "rating": 1600,   "tags": [ "binary search", "brute force", "dp", "math"   ]},{ "contestId": 813,  "index": "C",   "name": "The Tag Game", "type": "PROGRAMMING",  "rating": 1700,   "tags": [ "dfs and similar", "graphs"   ]},{ "contestId": 813,  "index": "B",   "name": "The Golden Age", "type": "PROGRAMMING",  "rating": 1800,   "tags": [ "brute force", "math"   ]},{ "contestId": 808,  "index": "D",   "name": "Array Division", "type": "PROGRAMMING",  "rating": 1900,   "tags": [ "binary search", "data structures", "implementation"   ]},{ "contestId": 803,  "index": "F",   "name": "Coprime Subsequences", "type": "PROGRAMMING",  "rating": 2000,   "tags": [ "bitmasks", "combinatorics", "number theory"   ]},{ "contestId": 803,  "index": "E",   "name": "Roma and Poker", "type": "PROGRAMMING",  "rating": 2000,   "tags": [ "dp", "graphs"   ]},{ "contestId": 803,  "index": "D",   "name": "Magazine Ad", "type": "PROGRAMMING",  "rating": 1900,   "tags": [ "binary search", "greedy"   ]},{ "contestId": 803,  "index": "C",   "name": "Maximal GCD", "type": "PROGRAMMING",  "rating": 1900,   "tags": [ "constructive algorithms", "greedy", "math"   ]},{ "contestId": 797,  "index": "E",   "name": "Array Queries", "type": "PROGRAMMING",  "rating": 2000,   "tags": [ "brute force", "data structures", "dp"   ]},{ "contestId": 797,  "index": "D",   "name": "Broken BST", "type": "PROGRAMMING",  "rating": 2100,   "tags": [ "data structures", "dfs and similar"   ]},{ "contestId": 797,  "index": "C",   "name": "Minimal string", "type": "PROGRAMMING",  "rating": 1700,   "tags": [ "data structures", "greedy", "strings"   ]},{ "contestId": 792,  "index": "D",   "name": "Paths in a Complete Binary Tree", "type": "PROGRAMMING",  "rating": 1900,   "tags": [ "bitmasks", "trees"   ]},{ "contestId": 792,  "index": "C",   "name": "Divide by Three", "type": "PROGRAMMING",  "rating": 2000,   "tags": [ "dp", "greedy", "math", "number theory"   ]},{ "contestId": 762,  "index": "C",   "name": "Two strings", "type": "PROGRAMMING",  "rating": 2100,   "tags": [ "binary search", "hashing", "strings", "two pointers"   ]},{ "contestId": 730,  "index": "J",   "name": "Bottles", "type": "PROGRAMMING",  "rating": 1900,   "tags": [ "dp"   ]},{ "contestId": 730,  "index": "I",   "name": "Olympiad in Programming and Sports", "type": "PROGRAMMING",  "rating": 2000,   "tags": [ "dp", "flows", "graphs", "greedy"   ]},{ "contestId": 730,  "index": "G",   "name": "Car Repair Shop", "type": "PROGRAMMING",  "rating": 1600,   "tags": [ "implementation"   ]},{ "contestId": 730,  "index": "C",   "name": "Bulmart", "type": "PROGRAMMING",  "rating": 2100,   "tags": [ "binary search", "dfs and similar"   ]},{ "contestId": 730,  "index": "B",   "name": "Minimum and Maximum", "type": "PROGRAMMING",  "rating": 1800,   "tags": [ "constructive algorithms", "interactive"   ]},{ "contestId": 730,  "index": "A",   "name": "Toda 2", "type": "PROGRAMMING",  "rating": 1800,   "tags": [ "greedy", "implementation"   ]},{ "contestId": 710,  "index": "E",   "name": "Generate a String", "type": "PROGRAMMING",  "rating": 2000,   "tags": [ "dfs and similar", "dp"   ]},{ "contestId": 702,  "index": "E",   "name": "Analysis of Pathes in Functional Graph", "type": "PROGRAMMING",  "rating": 2100,   "tags": [ "data structures", "graphs"   ]},{ "contestId": 702,  "index": "D",   "name": "Road to Post Office", "type": "PROGRAMMING",  "rating": 1900,   "tags": [ "math"   ]},{ "contestId": 691,  "index": "E",   "name": "Xor-sequences", "type": "PROGRAMMING",  "rating": 1900,   "tags": [ "matrices"   ]},{ "contestId": 691,  "index": "D",   "name": "Swaps in Permutation", "type": "PROGRAMMING",  "rating": 1700,   "tags": [ "dfs and similar", "dsu", "math"   ]},{ "contestId": 691,  "index": "C",   "name": "Exponential notation", "type": "PROGRAMMING",  "rating": 1800,   "tags": [ "implementation", "strings"   ]},{ "contestId": 691,  "index": "B",   "name": "s-palindrome", "type": "PROGRAMMING",  "rating": 1600,   "tags": [ "implementation", "strings"   ]},{ "contestId": 678,  "index": "D",   "name": "Iterated Linear Function", "type": "PROGRAMMING",  "rating": 1700,   "tags": [ "math", "number theory"   ]},{ "contestId": 678,  "index": "C",   "name": "Joty and Chocolate", "type": "PROGRAMMING",  "rating": 1600,   "tags": [ "implementation", "math", "number theory"   ]},{ "contestId": 678,  "index": "B",   "name": "The Same Calendar", "type": "PROGRAMMING",  "rating": 1600,   "tags": [ "implementation"   ]},{ "contestId": 665,  "index": "E",   "name": "Beautiful Subarrays", "type": "PROGRAMMING",  "rating": 2100,   "tags": [ "data structures", "divide and conquer", "strings", "trees"   ]},{ "contestId": 665,  "index": "D",   "name": "Simple Subset", "type": "PROGRAMMING",  "rating": 1800,   "tags": [ "constructive algorithms", "greedy", "number theory"   ]},{ "contestId": 665,  "index": "A",   "name": "Buses Between Cities", "type": "PROGRAMMING",  "rating": 1600,   "tags": [ "implementation"   ]},{ "contestId": 660,  "index": "D",   "name": "Number of Parallelograms", "type": "PROGRAMMING",  "rating": 1900,   "tags": [ "geometry"   ]},{ "contestId": 660,  "index": "C",   "name": "Hard Process", "type": "PROGRAMMING",  "rating": 1600,   "tags": [ "binary search", "dp", "two pointers"   ]},{ "contestId": 652,  "index": "D",   "name": "Nested Segments", "type": "PROGRAMMING",  "rating": 1800,   "tags": [ "data structures", "sortings"   ]},{ "contestId": 652,  "index": "C",   "name": "Foe Pairs", "type": "PROGRAMMING",  "rating": 1800,   "tags": [ "combinatorics", "sortings", "two pointers"   ]},{ "contestId": 632,  "index": "D",   "name": "Longest Subsequence", "type": "PROGRAMMING",  "rating": 2100,   "tags": [ "brute force", "math", "number theory"   ]},{ "contestId": 632,  "index": "C",   "name": "The Smallest String Concatenation", "type": "PROGRAMMING",  "rating": 1700,   "tags": [ "sortings", "strings"   ]},{ "contestId": 630,  "index": "Q",   "name": "Pyramids", "type": "PROGRAMMING",  "rating": 1700,   "tags": [ "geometry", "math"   ]},{ "contestId": 630,  "index": "P",   "name": "Area of a Star", "type": "PROGRAMMING",  "rating": 2100,   "tags": [ "geometry"   ]},{ "contestId": 630,  "index": "O",   "name": "Arrow", "type": "PROGRAMMING",  "rating": 2000,   "tags": [ "geometry"   ]},{ "contestId": 630,  "index": "M",   "name": "Turn", "type": "PROGRAMMING",  "rating": 1800,   "tags": [ "geometry", "math"   ]},{ "contestId": 630,  "index": "I",   "name": "Parking Lot", "type": "PROGRAMMING",  "rating": 1700,   "tags": [ "combinatorics", "math"   ]},{ "contestId": 630,  "index": "G",   "name": "Challenge Pennants", "type": "PROGRAMMING",  "rating": 1600,   "tags": [ "combinatorics", "math"   ]},{ "contestId": 630,  "index": "E",   "name": "A rectangle", "type": "PROGRAMMING",  "rating": 1900,   "tags": [ "math"   ]},{ "contestId": 622,  "index": "D",   "name": "Optimal Number Permutation", "type": "PROGRAMMING",  "rating": 1900,   "tags": [ "constructive algorithms"   ]},{ "contestId": 622,  "index": "C",   "name": "Not Equal on a Segment", "type": "PROGRAMMING",  "rating": 1700,   "tags": [ "data structures", "implementation"   ]},{ "contestId": 620,  "index": "E",   "name": "New Year Tree", "type": "PROGRAMMING",  "rating": 2100,   "tags": [ "bitmasks", "data structures", "trees"   ]},{ "contestId": 616,  "index": "D",   "name": "Longest k-Good Segment", "type": "PROGRAMMING",  "rating": 1600,   "tags": [ "binary search", "data structures", "two pointers"   ]},{ "contestId": 616,  "index": "C",   "name": "The Labyrinth", "type": "PROGRAMMING",  "rating": 1600,   "tags": [ "dfs and similar"   ]},{ "contestId": 612,  "index": "D",   "name": "The Union of k-Segments", "type": "PROGRAMMING",  "rating": 1800,   "tags": [ "greedy", "sortings"   ]},{ "contestId": 609,  "index": "E",   "name": "Minimum spanning tree for each edge", "type": "PROGRAMMING",  "rating": 2100,   "tags": [ "data structures", "dfs and similar", "dsu", "graphs", "trees"   ]},{ "contestId": 609,  "index": "D",   "name": "Gadgets for dollars and pounds", "type": "PROGRAMMING",  "rating": 2000,   "tags": [ "binary search", "greedy", "two pointers"   ]},{ "contestId": 600,  "index": "D",   "name": "Area of Two Circles' Intersection", "type": "PROGRAMMING",  "rating": 2000,   "tags": [ "geometry"   ]},{ "contestId": 600,  "index": "C",   "name": "Make Palindrome", "type": "PROGRAMMING",  "rating": 1800,   "tags": [ "constructive algorithms", "greedy", "strings"   ]},{ "contestId": 600,  "index": "A",   "name": "Extract Numbers", "type": "PROGRAMMING",  "rating": 1600,   "tags": [ "implementation", "strings"   ]},{ "contestId": 598,  "index": "E",   "name": "Chocolate Bar", "type": "PROGRAMMING",  "rating": 2000,   "tags": [ "brute force", "dp"   ]},{ "contestId": 598,  "index": "D",   "name": "Igor In the Museum", "type": "PROGRAMMING",  "rating": 1700,   "tags": [ "dfs and similar", "graphs", "shortest paths"   ]},{ "contestId": 509,  "index": "E",   "name": "Pretty Song", "type": "PROGRAMMING",  "rating": 2000,   "tags": [ "math", "strings"   ]},{ "contestId": 509,  "index": "C",   "name": "Sums of Digits", "type": "PROGRAMMING",  "rating": 2000,   "tags": [ "dp", "greedy", "implementation"   ]},{ "contestId": 245,  "index": "H",   "name": "Queries for Number of Palindromes", "type": "PROGRAMMING",  "rating": 1800,   "tags": [ "dp", "hashing", "strings"   ]},{ "contestId": 245,  "index": "F",   "name": "Log Stream Analysis", "type": "PROGRAMMING",  "rating": 2000,   "tags": [ "binary search", "brute force", "implementation", "strings"   ]},{ "contestId": 245,  "index": "C",   "name": "Game with Coins", "type": "PROGRAMMING",  "rating": 1700,   "tags": [ "greedy"   ]},{ "contestId": 241,  "index": "G",   "name": "Challenging Balloons", "type": "PROGRAMMING",  "rating": 1900,   "tags": [ "constructive algorithms"   ]},{ "contestId": 241,  "index": "C",   "name": "Mirror Box", "type": "PROGRAMMING",  "rating": 2000,   "tags": [ "geometry", "implementation"   ]},{ "contestId": 234,  "index": "H",   "name": "Merging Two Decks", "type": "PROGRAMMING",  "rating": 2000,   "tags": [ "constructive algorithms", "greedy"   ]},{ "contestId": 234,  "index": "G",   "name": "Practice", "type": "PROGRAMMING",  "rating": 1600,   "tags": [ "constructive algorithms", "divide and conquer", "implementation"   ]},{ "contestId": 234,  "index": "F",   "name": "Fence", "type": "PROGRAMMING",  "rating": 1800,   "tags": [ "dp"   ]},{ "contestId": 234,  "index": "E",   "name": "Champions' League", "type": "PROGRAMMING",  "rating": 1600,   "tags": [ "implementation"   ]},{ "contestId": 234,  "index": "D",   "name": "Cinema", "type": "PROGRAMMING",  "rating": 1600,   "tags": [ "implementation"   ]},{ "contestId": 180,  "index": "E",   "name": "Cubes", "type": "PROGRAMMING",  "rating": 1800,   "tags": [ "binary search", "dp", "two pointers"   ]},{ "contestId": 180,  "index": "D",   "name": "Name", "type": "PROGRAMMING",  "rating": 1900,   "tags": [ "greedy", "strings"   ]},{ "contestId": 180,  "index": "A",   "name": "Defragmentation", "type": "PROGRAMMING",  "rating": 1800,   "tags": [ "implementation"   ]},{ "contestId": 48,  "index": "E",   "name": "Ivan the Fool VS Gorynych the Dragon", "type": "PROGRAMMING",  "rating": 2100,   "tags": [ "dp", "games", "graphs"   ]},{ "contestId": 48,  "index": "C",   "name": "The Race", "type": "PROGRAMMING",  "rating": 1800,   "tags": [ "math"   ]},{ "contestId": 46,  "index": "E",   "name": "Comb", "type": "PROGRAMMING",  "rating": 1900,   "tags": [ "data structures", "dp"   ]},{ "contestId": 46,  "index": "D",   "name": "Parking Lot", "type": "PROGRAMMING",  "rating": 1800,   "tags": [ "data structures", "implementation"   ]},{ "contestId": 46,  "index": "C",   "name": "Hamsters and Tigers", "type": "PROGRAMMING",  "rating": 1600,   "tags": [ "two pointers"   ]},{ "contestId": 38,  "index": "F",   "name": "Smart Boy", "type": "PROGRAMMING",  "rating": 2100,   "tags": [ "dp", "games", "strings"   ]},{ "contestId": 38,  "index": "E",   "name": "Let's Go Rolling!", "type": "PROGRAMMING",  "rating": 1800,   "tags": [ "dp", "sortings"   ]},{ "contestId": 38,  "index": "D",   "name": "Vasya the Architect", "type": "PROGRAMMING",  "rating": 1900,   "tags": [ "implementation"   ]}]';